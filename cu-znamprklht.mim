;; cu-znamprklht.mim -- Znamenny Notation keyboard layout
;;  This is based on the pseudolayout of the Paraklht font
;;  as it is layed out here: <http://znamen.ru/paraklht.pdf>
;;
;; Copyright (c) 2019 Aleksandr Andreev.
;;
;; This file is part of the Ponomar Project. See https://sci.ponomar.net/.

;; Ponomar is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 2, or (at
;; your option) any later version.

;; Ponomar is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with Ponomar; see the file LICENSE.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

;;; @image html cu-znamprklht.png "Keyboard Layout"
;;; @image latex cu-znamprklht.eps "Keyboard Layout" width=\narrowwidth

(input-method cu-znamprklht)

(author "Ponomar Project SCI")

(description
 "Znamenny Notation keyboard layout based on the
  Parklht font.
  Клавиатурная раскладка для знаменной нотации,
  основанная на шрифте Paraklht.
  See also the documentation at https://sci.ponomar.net/
  См. также документацию на сайте https://sci.ponomar.net/
")

(title "ZNAM")

(map
 (map
  ("~" 0x1CF36) ;; podchashie
  ("q~" 0x1CF90) ;; polkulizmy
  ("Q~" 0x1CF90 0x1CF30) ;; polkulizmy bolshoy
  ("q`" 0x1CF8B) ;; statia zakrytaya
  ("Q`" 0x1CF8B 0x1CF30) ;; statia zakrytaya bolshaya
  ("!" 0x1CF5C) ;; palka
  ("1" 0x1CF30) ;; tonal range mark mrachno
  ("2" 0x1CF31) ;; tonal range mark svetlo
  ("@" 0x1CF60) ;; golubchik borzy
  ("3" 0x1CF32) ;; tonal range mark tresvetlo
  ("#5" 0x1CF00) ;; different combinations
  ("#6" 0x1CF01)
  ("#4" 0x1CF18)
  ("#9" 0x1CF1B)
  ("4" 0x1CF02)
  ("5" 0x1CF03)
  ("6" 0x1CF04)
  ("7" 0x1CF05)
  ("8" 0x1CF06)
  ("9" 0x1CF07)
  ("0" 0x1CF08)
  ("$z" 0x1CFA5)
  ("$x" 0x1CFA6)
  ("$r" 0x1CFBC)
  ("%z" 0x1CF92)
  ("%z{" 0x1CF94)
  ("%x" 0x1CF96)
  ("%X" 0x1CF97)
  ("%Z" 0x1CF95)
  ("%r" 0x1CFB5)
  ("^z" 0x1CFA2)
  ("^x" 0x1CFA3)
  ("^r" 0x1CFB9)
  ("&" 0x1CF26)
  ("*8" 0x1CF09)
  ("*9" 0x1CF0A)
  ("*0" 0x1CF0B)
  ("(" 0x1CF26)
  (")" 0x1CF36)
  ("-" 0x1CF33)
  ("=" 0x1CF22)
  ("_" 0x1CF82)
  ("+" 0x1CF81)
  ("q" 0x1CF86)
  ("q?" 0x1CF87)
  ("Q?" 0x1CF87 0x1CF30)
  ("Q" 0x1CF86 0x1CF30)
  ("q{" 0x1CF88)
  ("Q{" 0x1CF88 0x1CF30)
  ("q/" 0x1CF8B)
  ("Q/" 0x1CF8B 0x1CF30)
  ("W" 0x1CF86 0x1CF31)
  ("w" 0x1CF02)
  ("e" 0x1CF25)
  ("E" 0x1CF25)
  ("r" 0x1CF50)
  ("R" 0x1CF52)
  ("t" 0x1CF58)
  ("T" 0x1CFC3)
  ("tz" 0x1CFB0)
  ("y" 0x1CF04)
  ("Y" 0x1CF04)
  ("u" 0x1CF03)
  ("U" 0x1CF03)
  ("i" 0x1CF6F)
  ("I" 0x1CF6F 0x1CF3C)
  ("o5" 0x1CF00) ;; different combinations
  ("o6" 0x1CF01)
  ("o4" 0x1CF18)
  ("o9" 0x1CF1B)
  ("O" 0x1CF53)
  ("p" 0x1CF2A)
  ("P" 0x1CF3B)
  ("[" 0x1CF54)
  ("]" 0x1CF24)
  ("}" 0x1CF24)
  ("qz{" 0x1CF94)
  ("Lz{" 0x1CFAE)
  ("a" 0x1CFC1)
  ("A" 0x1CF83)
  ("s" 0x1CF86 0x1CF85)
  ("S" 0x1CF85)
  ("d" 0x1CF08)
  ("D" 0x1CF08)
  ("f8" 0x1CF09)
  ("f9" 0x1CF0A)
  ("f0" 0x1CF0B)
  ("F8" 0x1CF09)
  ("F9" 0x1CF0A)
  ("F0" 0x1CF0B)
  ("g" 0x1CF07)
  ("G" 0x1CF07)
  ("h" 0x1CF33 0x1CF3A)
  ("H" 0x1CF22)
  ("j" 0x1CF3A)
  ("J" 0x1CF3A)
  ("k" 0x1CF27)
  ("K" 0x1CF27)
  ("L" 0x1CF7D)
  ("Ll" 0x1CF7F)
  ("ll" 0x1CF7D)
  ("ll'" 0x1CF7E)
  ("L{" 0x1CF80)
  (";" 0x1CF5E)
  (":" 0x1CF5C 0x1CF3D)
  ("\"" 0x1CF5F)
  ("'" 0x1CF5D)
  ("'z" 0x1CF63)
  ("z)" 0x1CF70)
  ("Z" 0x1CF71)
  ("x" 0x1CF72)
  ("X" 0x1CF73)
  ("c" 0x1CF05)
  ("C" 0x1CF05)
  ("v" 0x1CF06)
  ("V" 0x1CF06)
  ("b" 0x1CF28)
  ("B" 0x1CF29)
  ("n" 0x1CF23)
  ("N" 0x1CF23)
  ("m" 0x1CF56)
  ("mz" 0x1CFAF)
  ("M" 0x1CF57)
  ("," 0x1CF2C)
  ("<" 0x1CF24)
  ("." 0x1CF26)
  (">" 0x1CF86 0x1CF31 0x1CF3B)
  ("??!" 0x1CF6D)
  ("??i" 0x1CF6E)
  ("/z" 0x1CFA7)
  ("/x" 0x1CFA8)
  ("//z" 0x1CFAC)
  ("//x" 0x1CFAD)
  ("//z}" 0x1CFAE)
  ("\\" 0x1CF35)
  ("|" 0x1CF35)
  ;; AltGr and AltGr+Shift levels
  ((A-@) 0x1CF55)
  ((A-2) 0x1CF5A)
  ((A-^) 0x1CF74)
  ((A-T) 0x1CF86 0x1CFC3)
  ((A-a) 0x1CF61)
  ((A-s) 0x1CF62)
  ((A-k) 0x1CF3C)
  ((A-A) 0x1CF3F)
  ((A-S) 0x1CFB1)
  ((A-i) 0x1CF40)
  ((A-|) 0x1CF3E)
  ((A-z) 0x1CF63)
  ((A-Z) 0x1CF64)
  ((A-x) 0x1CF65)
  ((A-X) 0x1CF66)
  ((A-4) 0x1CF0E)
  ((A-5) 0x1CF0F)
  ((A-6) 0x1CF10)
  ((A-7) 0x1CF11)
  ((A-8) 0x1CF12)
  ((A-9) 0x1CF13)
  ((A-0) 0x1CF14)
  ((A-%) 0x1CF0C)
  ((A-y) 0x1CF0D)
  ((A-Y) 0x1CF0D)
  ((A-*) 0x1CF15)
  ((A-\() 0x1CF16)
  ((A-\)) 0x1CF17)
  ((A->) 0x1CF59)
 )
)

(state
 (init
  (map)))

;; Local Variables:
;; coding: utf-8
;; mode: lisp
;; End: